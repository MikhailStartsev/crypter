/This program implements block cryptography algorithm based on Feistel network.
Block size: 128 bit
Key size: 64 bit

Compile:

mkdir build
cd build
cmake ../
make

Run: ./blockcrypt

Usage: run program with -h or --help

NOTE: derived from the RSA Data Security, Inc. MD5 Message-Digest Algorithm

Authors:
	Mikhail Startsev	Roman Bolshakov


		    Описание алгоритма:

    Алгортим работает на основе сети Фейстеля с 3 раундами. 
    
    Ключи генерируются для каждого блока (по 128 бит) шифруемого файла  для каждого раунда.
    
    Файл дополняется соответствующим числом символов '\0' до длины, кратной 128. 

I. Алгоритм гнерации ключей: 
    
    Порождаем псевдослучайную последовательность последними 4 байтами хэша ключа.
    Считаем K0 = Key
    
    Для генерации из i-ого ключа (i+1)ого:
	1) Считаем H(Ki) и делим его на 4 блока по 4 байта, которые складываем (xor) 
	    со следущим случайным числом из порождённой выше последовательности (1й блок со следующим,
	    2й - с ещё следующим и т.д.)
	2) 4 часла-результата предыдущего шага сохраняем в переменные P1, P2, P3, P4 соответственно.
	3) Вычисляем K(i+1) = (P1 xor P4) + (P2 xor P3), где + - конкатенация строк. При необходимости дополняем строку
	    необходимым числом байтов до 64 бит
	4) Повторяем, увеличиваю i на 1, пока не сгенерируем нужно число ключей.
    Раундовые ключи - ключи с номерами от 1 и далее

II. Функция F сети Феёстеля
    
	1) Предподсчитывается массив R из 1<<24 чисел псевдослучайной последовательности, порождённой последними 4 байтами H(Key)
	2) F(K, L) = R[ H(K+L) mod 1<<24 ] + R[ H(K xor L) mod 1<<24 ],
	    где K, L - парамметры F, '+' - конкатенация строк, xor для строк - посимвольный xor.